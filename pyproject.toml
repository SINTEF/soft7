# Setup information - see below for dev tool configuration
[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "soft7"
authors = [
    {name = "Thomas FjÃ¦stad Hagelien", email = "thomas.f.hagelien@sintef.no"},
    {name = "Casper Welzel Andersen", email = "casper.w.andersen@sintef.no"},
    {name = "Treesa Rose Joseph", email = "treesa.joseph@sintef.no"},
]
description = "SOFT7 semantic interoperability framework."
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Natural Language :: English",
    "Operating System :: OS Independent",
]
keywords = ["interoperability", "semantic"]
requires-python = "~=3.9"
dynamic = ["version"]

dependencies = [
    "httpx>=0.27.2,<1",
    "oteapi-core>=0.7.0.dev6",
    "otelib~=0.5.0.dev1",
    "pyyaml~=6.0",
    "typing-extensions~=4.12; python_version < '3.12'",
]

# Other dependencies governed by oteapi-core:
# - pydantic

[project.optional-dependencies]
docs = [
    "myst-nb~=1.1",
    "pydata-sphinx-theme~=0.16.0",
    "sphinx>=7.4.7,<9",  # Allow v7 to support Python 3.9
]
graph = [
    "jinja2~=3.1",
    "rdflib~=7.1",
    "sparqlwrapper~=2.0",
]
testing = [
    "pytest~=8.3",
    "pytest-cov~=6.0",
    "pytest-httpx~=0.35.0",
    "requests-mock~=1.12",
    "soft7[graph]",
]
dev = [
    "pre-commit~=4.0",
    "soft7[docs,graph,testing]",
]

[project.urls]
Home = "https://github.com/SINTEF/soft7"
Documentation = "https://SINTEF.github.io/soft7"
Source = "https://github.com/SINTEF/soft7"
"Issue Tracker" = "https://github.com/SINTEF/soft7/issues"
Changelog = "https://github.com/SINTEF/soft7/blob/main/CHANGELOG.md"
Package = "https://pypi.org/project/soft7"

# Register OTEAPI strategies
[project.entry-points."oteapi.function"]
"soft7.soft7" = "s7.oteapi_plugin.soft7_function:SOFT7Generator"
"soft7.SOFT7" = "s7.oteapi_plugin.soft7_function:SOFT7Generator"
"soft7.soft" = "s7.oteapi_plugin.soft7_function:SOFT7Generator"
"soft7.SOFT" = "s7.oteapi_plugin.soft7_function:SOFT7Generator"
[project.entry-points."oteapi.parse"]
"soft7.parser/yaml" = "s7.oteapi_plugin.yaml_parser:YAMLDataParseStrategy"
"soft7.parser/yml" = "s7.oteapi_plugin.yaml_parser:YAMLDataParseStrategy"

[tool.flit.module]
name = "s7"

# Dev tool configurations
[tool.mypy]
python_version = "3.9"
ignore_missing_imports = true
scripts_are_modules = true
warn_unused_configs = true
show_error_codes = true
allow_redefinition = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
minversion = "8.1"
addopts = "-rs --cov=s7 --cov-report=term-missing:skip-covered --no-cov-on-fail"
filterwarnings = [
    "error",  # Fail on any warning
]

[tool.ruff.lint]
extend-select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "B",  # flake8-bugbear
    "BLE",  # flake8-blind-except
    "I",  # isort
    "ARG",  # flake8-unused-arguments
    "C4",  # flake8-comprehensions
    "ICN",  # flake8-import-conventions
    "G",  # flake8-logging-format
    "PGH",  # pygrep-hooks
    "PIE",  # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH",  # flake8-use-pathlib
    "RET",  # flake8-return
    "RUF",  # Ruff-specific
    "SIM",  # flake8-simplify
    "T20",  # flake8-print
    "YTT",  # flake8-2020
    "EXE",  # flake8-executable
    "PYI",  # flake8-pyi
]
ignore = [
    "PLR",  # Design related pylint codes
]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.extend-per-file-ignores]
"tests/**" = [
    "BLE",  # flake8-blind-except
    "PL",  # pylint
    "B018",  # useless expression
]
"docs/**" = [
    "I002",  # from __future__ import annotations
]
"graph/**" = [
    "T20",  # flake8-print
]
